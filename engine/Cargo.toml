[package]
name = "sourcerenderer_engine"
version = "0.1.0"
authors = ["Robin Kertels <robin.kertels@gmail.com>"]
edition = "2021"

[dependencies]
num_cpus = "1.16"
atomic_refcell = "0.1"
sourcerenderer_core = { path = "../core" }
image = "0.25"
crossbeam-channel = "0.5"
crossbeam-utils = "0.8"
sourcerenderer_bsp = { path = "../valve_formats/bsp" }
sourcerenderer_vpk = { path = "../valve_formats/vpk" }
sourcerenderer_vtf = { path = "../valve_formats/vtf" }
sourcerenderer_vmt = { path = "../valve_formats/vmt" }
sourcerenderer_mdl = { path = "../valve_formats/mdl" }
sourcerenderer_vtx = { path = "../valve_formats/vtx" }
sourcerenderer_vvd = { path = "../valve_formats/vvd" }
io_util = { path = "../io_util", features = [ "async" ] }
regex = "1.11"
bitvec = "1.0"
smallvec = { version = "1.15", features = [ "union", "const_generics", "const_new" ] }
gltf = { version = "1.4", features = ["KHR_lights_punctual"] }
rand = "0.9"
bitset-core = "0.1"
web-time = "1.1"
log = "0.4"
rapier3d = { version = "0.24", features = [ "enhanced-determinism", "f32" ] }
half = "2.6"
profiling = "1.0"
field-offset = "0.3"
widestring = "1.2"
bitflags = "2.9"
strum = "0.27"
strum_macros = "0.27"
# imgui = "0.12"
thread_local = "1.1"
serde_json = "1.0"
smartstring = "1.0"
bumpalo = { version = "3.17", features = [ "collections", "boxed" ] }
futures-io = "0.3"
waker-fn = "1.2"
async-mutex = "1.4"
async-rwlock = "1.3"
atomic-waker = "1.1"
futures-lite = "2.6"
dyn-clone = "1.0"

bevy_app = "0.15"
bevy_math = "0.15"
bevy_ecs = "0.15"
bevy_transform = "0.15"
bevy_hierarchy = "0.15"
bevy_log = "0.15"
bevy_tasks = { version = "0.15" }
bevy_utils = "0.15"
bevy_core = "0.15"
bevy_time = "0.15"
bevy_input = "0.15"

# bevy_ecs has a dependency on async-executor which itself has a dependency on an ancient version of slab that no longer builds on modern rust versions.
# This forces Cargo to use a more recent version of Slab.
slab = "=0.4.9"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
parking_lot = "0.12"

[target.'cfg(any(target_os = "windows", target_os = "linux", target_os = "android", target_os = "freebsd", target_os = "dragonfly", target_os = "netbsd", target_os = "openbsd"))'.dependencies]
sourcerenderer_vulkan = { path = "../graphics/vulkan" }

[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
sourcerenderer_metal = { path = "../graphics/metal" }
objc2 = { version = "0.6", features = [ "std", "disable-encoding-assertions" ] } # disable-encoding-assertions is required otherwise the Metal debugger doesn't work

# Force rand crate to use getrandom with wasm-js feature
[target.'cfg(target_arch = "wasm32")'.dependencies]
sourcerenderer_webgpu = { path = "../graphics/webgpu" }
getrandom = { version = "0.3", features = [ "wasm_js" ] }
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
web-sys = { version = "0.3", features = [ "OffscreenCanvas", "Navigator", "DedicatedWorkerGlobalScope", "WorkerNavigator" ] }
js-sys = "0.3"
wasm-bindgen-futures = "0.4.50"

[features]
default = [ "threading" ]
# default = [ ]
ecs_threading = [ "bevy_tasks/multi_threaded" ]
render_thread = [ ]
threading = [ "ecs_threading", "render_thread" ]
web = [ ]
profile = [ "profiling/profile-with-optick" ]
